/*
 * RPM Mobile
 * RPM Mobile
 *
 * The version of the OpenAPI document: Phase 1
 * Contact: karthikchiru@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.CustomAttributeData;
import org.openapitools.client.model.MethodInfo;
import org.openapitools.client.model.Module;
import org.openapitools.client.model.SecurityRuleSet;
import org.openapitools.client.model.Type;
import org.openapitools.client.model.TypeInfo;
import java.io.Serializable;

/**
 * Assembly
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-12-06T18:15:43.848127100+05:30[Asia/Calcutta]")
public class Assembly implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_DEFINED_TYPES = "definedTypes";
  @SerializedName(SERIALIZED_NAME_DEFINED_TYPES)
  private List<TypeInfo> definedTypes = null;

  public static final String SERIALIZED_NAME_EXPORTED_TYPES = "exportedTypes";
  @SerializedName(SERIALIZED_NAME_EXPORTED_TYPES)
  private List<Type> exportedTypes = null;

  public static final String SERIALIZED_NAME_CODE_BASE = "codeBase";
  @SerializedName(SERIALIZED_NAME_CODE_BASE)
  private String codeBase;

  public static final String SERIALIZED_NAME_ENTRY_POINT = "entryPoint";
  @SerializedName(SERIALIZED_NAME_ENTRY_POINT)
  private MethodInfo entryPoint;

  public static final String SERIALIZED_NAME_FULL_NAME = "fullName";
  @SerializedName(SERIALIZED_NAME_FULL_NAME)
  private String fullName;

  public static final String SERIALIZED_NAME_IMAGE_RUNTIME_VERSION = "imageRuntimeVersion";
  @SerializedName(SERIALIZED_NAME_IMAGE_RUNTIME_VERSION)
  private String imageRuntimeVersion;

  public static final String SERIALIZED_NAME_IS_DYNAMIC = "isDynamic";
  @SerializedName(SERIALIZED_NAME_IS_DYNAMIC)
  private Boolean isDynamic;

  public static final String SERIALIZED_NAME_LOCATION = "location";
  @SerializedName(SERIALIZED_NAME_LOCATION)
  private String location;

  public static final String SERIALIZED_NAME_REFLECTION_ONLY = "reflectionOnly";
  @SerializedName(SERIALIZED_NAME_REFLECTION_ONLY)
  private Boolean reflectionOnly;

  public static final String SERIALIZED_NAME_IS_COLLECTIBLE = "isCollectible";
  @SerializedName(SERIALIZED_NAME_IS_COLLECTIBLE)
  private Boolean isCollectible;

  public static final String SERIALIZED_NAME_IS_FULLY_TRUSTED = "isFullyTrusted";
  @SerializedName(SERIALIZED_NAME_IS_FULLY_TRUSTED)
  private Boolean isFullyTrusted;

  public static final String SERIALIZED_NAME_CUSTOM_ATTRIBUTES = "customAttributes";
  @SerializedName(SERIALIZED_NAME_CUSTOM_ATTRIBUTES)
  private List<CustomAttributeData> customAttributes = null;

  public static final String SERIALIZED_NAME_ESCAPED_CODE_BASE = "escapedCodeBase";
  @SerializedName(SERIALIZED_NAME_ESCAPED_CODE_BASE)
  private String escapedCodeBase;

  public static final String SERIALIZED_NAME_MANIFEST_MODULE = "manifestModule";
  @SerializedName(SERIALIZED_NAME_MANIFEST_MODULE)
  private Module manifestModule;

  public static final String SERIALIZED_NAME_MODULES = "modules";
  @SerializedName(SERIALIZED_NAME_MODULES)
  private List<Module> modules = null;

  public static final String SERIALIZED_NAME_GLOBAL_ASSEMBLY_CACHE = "globalAssemblyCache";
  @SerializedName(SERIALIZED_NAME_GLOBAL_ASSEMBLY_CACHE)
  private Boolean globalAssemblyCache;

  public static final String SERIALIZED_NAME_HOST_CONTEXT = "hostContext";
  @SerializedName(SERIALIZED_NAME_HOST_CONTEXT)
  private Long hostContext;

  public static final String SERIALIZED_NAME_SECURITY_RULE_SET = "securityRuleSet";
  @SerializedName(SERIALIZED_NAME_SECURITY_RULE_SET)
  private SecurityRuleSet securityRuleSet;


   /**
   * Get definedTypes
   * @return definedTypes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<TypeInfo> getDefinedTypes() {
    return definedTypes;
  }




   /**
   * Get exportedTypes
   * @return exportedTypes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Type> getExportedTypes() {
    return exportedTypes;
  }




   /**
   * Get codeBase
   * @return codeBase
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCodeBase() {
    return codeBase;
  }




  public Assembly entryPoint(MethodInfo entryPoint) {
    
    this.entryPoint = entryPoint;
    return this;
  }

   /**
   * Get entryPoint
   * @return entryPoint
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public MethodInfo getEntryPoint() {
    return entryPoint;
  }


  public void setEntryPoint(MethodInfo entryPoint) {
    this.entryPoint = entryPoint;
  }


   /**
   * Get fullName
   * @return fullName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getFullName() {
    return fullName;
  }




   /**
   * Get imageRuntimeVersion
   * @return imageRuntimeVersion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getImageRuntimeVersion() {
    return imageRuntimeVersion;
  }




   /**
   * Get isDynamic
   * @return isDynamic
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsDynamic() {
    return isDynamic;
  }




   /**
   * Get location
   * @return location
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getLocation() {
    return location;
  }




   /**
   * Get reflectionOnly
   * @return reflectionOnly
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getReflectionOnly() {
    return reflectionOnly;
  }




   /**
   * Get isCollectible
   * @return isCollectible
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsCollectible() {
    return isCollectible;
  }




   /**
   * Get isFullyTrusted
   * @return isFullyTrusted
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsFullyTrusted() {
    return isFullyTrusted;
  }




   /**
   * Get customAttributes
   * @return customAttributes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<CustomAttributeData> getCustomAttributes() {
    return customAttributes;
  }




   /**
   * Get escapedCodeBase
   * @return escapedCodeBase
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getEscapedCodeBase() {
    return escapedCodeBase;
  }




  public Assembly manifestModule(Module manifestModule) {
    
    this.manifestModule = manifestModule;
    return this;
  }

   /**
   * Get manifestModule
   * @return manifestModule
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Module getManifestModule() {
    return manifestModule;
  }


  public void setManifestModule(Module manifestModule) {
    this.manifestModule = manifestModule;
  }


   /**
   * Get modules
   * @return modules
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Module> getModules() {
    return modules;
  }




   /**
   * Get globalAssemblyCache
   * @return globalAssemblyCache
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getGlobalAssemblyCache() {
    return globalAssemblyCache;
  }




   /**
   * Get hostContext
   * @return hostContext
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getHostContext() {
    return hostContext;
  }




  public Assembly securityRuleSet(SecurityRuleSet securityRuleSet) {
    
    this.securityRuleSet = securityRuleSet;
    return this;
  }

   /**
   * Get securityRuleSet
   * @return securityRuleSet
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public SecurityRuleSet getSecurityRuleSet() {
    return securityRuleSet;
  }


  public void setSecurityRuleSet(SecurityRuleSet securityRuleSet) {
    this.securityRuleSet = securityRuleSet;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Assembly assembly = (Assembly) o;
    return Objects.equals(this.definedTypes, assembly.definedTypes) &&
        Objects.equals(this.exportedTypes, assembly.exportedTypes) &&
        Objects.equals(this.codeBase, assembly.codeBase) &&
        Objects.equals(this.entryPoint, assembly.entryPoint) &&
        Objects.equals(this.fullName, assembly.fullName) &&
        Objects.equals(this.imageRuntimeVersion, assembly.imageRuntimeVersion) &&
        Objects.equals(this.isDynamic, assembly.isDynamic) &&
        Objects.equals(this.location, assembly.location) &&
        Objects.equals(this.reflectionOnly, assembly.reflectionOnly) &&
        Objects.equals(this.isCollectible, assembly.isCollectible) &&
        Objects.equals(this.isFullyTrusted, assembly.isFullyTrusted) &&
        Objects.equals(this.customAttributes, assembly.customAttributes) &&
        Objects.equals(this.escapedCodeBase, assembly.escapedCodeBase) &&
        Objects.equals(this.manifestModule, assembly.manifestModule) &&
        Objects.equals(this.modules, assembly.modules) &&
        Objects.equals(this.globalAssemblyCache, assembly.globalAssemblyCache) &&
        Objects.equals(this.hostContext, assembly.hostContext) &&
        Objects.equals(this.securityRuleSet, assembly.securityRuleSet);
  }

  @Override
  public int hashCode() {
    return Objects.hash(definedTypes, exportedTypes, codeBase, entryPoint, fullName, imageRuntimeVersion, isDynamic, location, reflectionOnly, isCollectible, isFullyTrusted, customAttributes, escapedCodeBase, manifestModule, modules, globalAssemblyCache, hostContext, securityRuleSet);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Assembly {\n");
    sb.append("    definedTypes: ").append(toIndentedString(definedTypes)).append("\n");
    sb.append("    exportedTypes: ").append(toIndentedString(exportedTypes)).append("\n");
    sb.append("    codeBase: ").append(toIndentedString(codeBase)).append("\n");
    sb.append("    entryPoint: ").append(toIndentedString(entryPoint)).append("\n");
    sb.append("    fullName: ").append(toIndentedString(fullName)).append("\n");
    sb.append("    imageRuntimeVersion: ").append(toIndentedString(imageRuntimeVersion)).append("\n");
    sb.append("    isDynamic: ").append(toIndentedString(isDynamic)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    reflectionOnly: ").append(toIndentedString(reflectionOnly)).append("\n");
    sb.append("    isCollectible: ").append(toIndentedString(isCollectible)).append("\n");
    sb.append("    isFullyTrusted: ").append(toIndentedString(isFullyTrusted)).append("\n");
    sb.append("    customAttributes: ").append(toIndentedString(customAttributes)).append("\n");
    sb.append("    escapedCodeBase: ").append(toIndentedString(escapedCodeBase)).append("\n");
    sb.append("    manifestModule: ").append(toIndentedString(manifestModule)).append("\n");
    sb.append("    modules: ").append(toIndentedString(modules)).append("\n");
    sb.append("    globalAssemblyCache: ").append(toIndentedString(globalAssemblyCache)).append("\n");
    sb.append("    hostContext: ").append(toIndentedString(hostContext)).append("\n");
    sb.append("    securityRuleSet: ").append(toIndentedString(securityRuleSet)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

