/*
 * RPM Mobile
 * RPM Mobile
 *
 * The version of the OpenAPI document: Phase 1
 * Contact: karthikchiru@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.ConstructorInfo;
import org.openapitools.client.model.CustomAttributeNamedArgument;
import org.openapitools.client.model.CustomAttributeTypedArgument;
import org.openapitools.client.model.Type;
import java.io.Serializable;

/**
 * CustomAttributeData
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-12-06T18:15:43.848127100+05:30[Asia/Calcutta]")
public class CustomAttributeData implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_ATTRIBUTE_TYPE = "attributeType";
  @SerializedName(SERIALIZED_NAME_ATTRIBUTE_TYPE)
  private Type attributeType;

  public static final String SERIALIZED_NAME_CONSTRUCTOR = "constructor";
  @SerializedName(SERIALIZED_NAME_CONSTRUCTOR)
  private ConstructorInfo constructor;

  public static final String SERIALIZED_NAME_CONSTRUCTOR_ARGUMENTS = "constructorArguments";
  @SerializedName(SERIALIZED_NAME_CONSTRUCTOR_ARGUMENTS)
  private List<CustomAttributeTypedArgument> constructorArguments = null;

  public static final String SERIALIZED_NAME_NAMED_ARGUMENTS = "namedArguments";
  @SerializedName(SERIALIZED_NAME_NAMED_ARGUMENTS)
  private List<CustomAttributeNamedArgument> namedArguments = null;


  public CustomAttributeData attributeType(Type attributeType) {
    
    this.attributeType = attributeType;
    return this;
  }

   /**
   * Get attributeType
   * @return attributeType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Type getAttributeType() {
    return attributeType;
  }


  public void setAttributeType(Type attributeType) {
    this.attributeType = attributeType;
  }


  public CustomAttributeData constructor(ConstructorInfo constructor) {
    
    this.constructor = constructor;
    return this;
  }

   /**
   * Get constructor
   * @return constructor
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ConstructorInfo getConstructor() {
    return constructor;
  }


  public void setConstructor(ConstructorInfo constructor) {
    this.constructor = constructor;
  }


   /**
   * Get constructorArguments
   * @return constructorArguments
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<CustomAttributeTypedArgument> getConstructorArguments() {
    return constructorArguments;
  }




   /**
   * Get namedArguments
   * @return namedArguments
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<CustomAttributeNamedArgument> getNamedArguments() {
    return namedArguments;
  }




  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CustomAttributeData customAttributeData = (CustomAttributeData) o;
    return Objects.equals(this.attributeType, customAttributeData.attributeType) &&
        Objects.equals(this.constructor, customAttributeData.constructor) &&
        Objects.equals(this.constructorArguments, customAttributeData.constructorArguments) &&
        Objects.equals(this.namedArguments, customAttributeData.namedArguments);
  }

  @Override
  public int hashCode() {
    return Objects.hash(attributeType, constructor, constructorArguments, namedArguments);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CustomAttributeData {\n");
    sb.append("    attributeType: ").append(toIndentedString(attributeType)).append("\n");
    sb.append("    constructor: ").append(toIndentedString(constructor)).append("\n");
    sb.append("    constructorArguments: ").append(toIndentedString(constructorArguments)).append("\n");
    sb.append("    namedArguments: ").append(toIndentedString(namedArguments)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

