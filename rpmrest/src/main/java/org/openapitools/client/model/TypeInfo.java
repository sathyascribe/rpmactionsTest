/*
 * RPM Mobile
 * RPM Mobile
 *
 * The version of the OpenAPI document: Phase 1
 * Contact: karthikchiru@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
import org.openapitools.client.model.Assembly;
import org.openapitools.client.model.ConstructorInfo;
import org.openapitools.client.model.CustomAttributeData;
import org.openapitools.client.model.EventInfo;
import org.openapitools.client.model.FieldInfo;
import org.openapitools.client.model.GenericParameterAttributes;
import org.openapitools.client.model.MemberInfo;
import org.openapitools.client.model.MemberTypes;
import org.openapitools.client.model.MethodBase;
import org.openapitools.client.model.MethodInfo;
import org.openapitools.client.model.Module;
import org.openapitools.client.model.PropertyInfo;
import org.openapitools.client.model.RuntimeTypeHandle;
import org.openapitools.client.model.StructLayoutAttribute;
import org.openapitools.client.model.Type;
import org.openapitools.client.model.TypeAttributes;
import java.io.Serializable;

/**
 * TypeInfo
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-12-06T18:15:43.848127100+05:30[Asia/Calcutta]")
public class TypeInfo implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_CUSTOM_ATTRIBUTES = "customAttributes";
  @SerializedName(SERIALIZED_NAME_CUSTOM_ATTRIBUTES)
  private List<CustomAttributeData> customAttributes = null;

  public static final String SERIALIZED_NAME_IS_COLLECTIBLE = "isCollectible";
  @SerializedName(SERIALIZED_NAME_IS_COLLECTIBLE)
  private Boolean isCollectible;

  public static final String SERIALIZED_NAME_METADATA_TOKEN = "metadataToken";
  @SerializedName(SERIALIZED_NAME_METADATA_TOKEN)
  private Integer metadataToken;

  public static final String SERIALIZED_NAME_IS_INTERFACE = "isInterface";
  @SerializedName(SERIALIZED_NAME_IS_INTERFACE)
  private Boolean isInterface;

  public static final String SERIALIZED_NAME_MEMBER_TYPE = "memberType";
  @SerializedName(SERIALIZED_NAME_MEMBER_TYPE)
  private MemberTypes memberType;

  public static final String SERIALIZED_NAME_NAMESPACE = "namespace";
  @SerializedName(SERIALIZED_NAME_NAMESPACE)
  private String namespace;

  public static final String SERIALIZED_NAME_ASSEMBLY_QUALIFIED_NAME = "assemblyQualifiedName";
  @SerializedName(SERIALIZED_NAME_ASSEMBLY_QUALIFIED_NAME)
  private String assemblyQualifiedName;

  public static final String SERIALIZED_NAME_FULL_NAME = "fullName";
  @SerializedName(SERIALIZED_NAME_FULL_NAME)
  private String fullName;

  public static final String SERIALIZED_NAME_ASSEMBLY = "assembly";
  @SerializedName(SERIALIZED_NAME_ASSEMBLY)
  private Assembly assembly;

  public static final String SERIALIZED_NAME_MODULE = "module";
  @SerializedName(SERIALIZED_NAME_MODULE)
  private Module module;

  public static final String SERIALIZED_NAME_IS_NESTED = "isNested";
  @SerializedName(SERIALIZED_NAME_IS_NESTED)
  private Boolean isNested;

  public static final String SERIALIZED_NAME_DECLARING_TYPE = "declaringType";
  @SerializedName(SERIALIZED_NAME_DECLARING_TYPE)
  private Type declaringType;

  public static final String SERIALIZED_NAME_DECLARING_METHOD = "declaringMethod";
  @SerializedName(SERIALIZED_NAME_DECLARING_METHOD)
  private MethodBase declaringMethod;

  public static final String SERIALIZED_NAME_REFLECTED_TYPE = "reflectedType";
  @SerializedName(SERIALIZED_NAME_REFLECTED_TYPE)
  private Type reflectedType;

  public static final String SERIALIZED_NAME_UNDERLYING_SYSTEM_TYPE = "underlyingSystemType";
  @SerializedName(SERIALIZED_NAME_UNDERLYING_SYSTEM_TYPE)
  private Type underlyingSystemType;

  public static final String SERIALIZED_NAME_IS_TYPE_DEFINITION = "isTypeDefinition";
  @SerializedName(SERIALIZED_NAME_IS_TYPE_DEFINITION)
  private Boolean isTypeDefinition;

  public static final String SERIALIZED_NAME_IS_ARRAY = "isArray";
  @SerializedName(SERIALIZED_NAME_IS_ARRAY)
  private Boolean isArray;

  public static final String SERIALIZED_NAME_IS_BY_REF = "isByRef";
  @SerializedName(SERIALIZED_NAME_IS_BY_REF)
  private Boolean isByRef;

  public static final String SERIALIZED_NAME_IS_POINTER = "isPointer";
  @SerializedName(SERIALIZED_NAME_IS_POINTER)
  private Boolean isPointer;

  public static final String SERIALIZED_NAME_IS_CONSTRUCTED_GENERIC_TYPE = "isConstructedGenericType";
  @SerializedName(SERIALIZED_NAME_IS_CONSTRUCTED_GENERIC_TYPE)
  private Boolean isConstructedGenericType;

  public static final String SERIALIZED_NAME_IS_GENERIC_PARAMETER = "isGenericParameter";
  @SerializedName(SERIALIZED_NAME_IS_GENERIC_PARAMETER)
  private Boolean isGenericParameter;

  public static final String SERIALIZED_NAME_IS_GENERIC_TYPE_PARAMETER = "isGenericTypeParameter";
  @SerializedName(SERIALIZED_NAME_IS_GENERIC_TYPE_PARAMETER)
  private Boolean isGenericTypeParameter;

  public static final String SERIALIZED_NAME_IS_GENERIC_METHOD_PARAMETER = "isGenericMethodParameter";
  @SerializedName(SERIALIZED_NAME_IS_GENERIC_METHOD_PARAMETER)
  private Boolean isGenericMethodParameter;

  public static final String SERIALIZED_NAME_IS_GENERIC_TYPE = "isGenericType";
  @SerializedName(SERIALIZED_NAME_IS_GENERIC_TYPE)
  private Boolean isGenericType;

  public static final String SERIALIZED_NAME_IS_GENERIC_TYPE_DEFINITION = "isGenericTypeDefinition";
  @SerializedName(SERIALIZED_NAME_IS_GENERIC_TYPE_DEFINITION)
  private Boolean isGenericTypeDefinition;

  public static final String SERIALIZED_NAME_IS_S_Z_ARRAY = "isSZArray";
  @SerializedName(SERIALIZED_NAME_IS_S_Z_ARRAY)
  private Boolean isSZArray;

  public static final String SERIALIZED_NAME_IS_VARIABLE_BOUND_ARRAY = "isVariableBoundArray";
  @SerializedName(SERIALIZED_NAME_IS_VARIABLE_BOUND_ARRAY)
  private Boolean isVariableBoundArray;

  public static final String SERIALIZED_NAME_IS_BY_REF_LIKE = "isByRefLike";
  @SerializedName(SERIALIZED_NAME_IS_BY_REF_LIKE)
  private Boolean isByRefLike;

  public static final String SERIALIZED_NAME_HAS_ELEMENT_TYPE = "hasElementType";
  @SerializedName(SERIALIZED_NAME_HAS_ELEMENT_TYPE)
  private Boolean hasElementType;

  public static final String SERIALIZED_NAME_GENERIC_TYPE_ARGUMENTS = "genericTypeArguments";
  @SerializedName(SERIALIZED_NAME_GENERIC_TYPE_ARGUMENTS)
  private List<Type> genericTypeArguments = null;

  public static final String SERIALIZED_NAME_GENERIC_PARAMETER_POSITION = "genericParameterPosition";
  @SerializedName(SERIALIZED_NAME_GENERIC_PARAMETER_POSITION)
  private Integer genericParameterPosition;

  public static final String SERIALIZED_NAME_GENERIC_PARAMETER_ATTRIBUTES = "genericParameterAttributes";
  @SerializedName(SERIALIZED_NAME_GENERIC_PARAMETER_ATTRIBUTES)
  private GenericParameterAttributes genericParameterAttributes;

  public static final String SERIALIZED_NAME_ATTRIBUTES = "attributes";
  @SerializedName(SERIALIZED_NAME_ATTRIBUTES)
  private TypeAttributes attributes;

  public static final String SERIALIZED_NAME_IS_ABSTRACT = "isAbstract";
  @SerializedName(SERIALIZED_NAME_IS_ABSTRACT)
  private Boolean isAbstract;

  public static final String SERIALIZED_NAME_IS_IMPORT = "isImport";
  @SerializedName(SERIALIZED_NAME_IS_IMPORT)
  private Boolean isImport;

  public static final String SERIALIZED_NAME_IS_SEALED = "isSealed";
  @SerializedName(SERIALIZED_NAME_IS_SEALED)
  private Boolean isSealed;

  public static final String SERIALIZED_NAME_IS_SPECIAL_NAME = "isSpecialName";
  @SerializedName(SERIALIZED_NAME_IS_SPECIAL_NAME)
  private Boolean isSpecialName;

  public static final String SERIALIZED_NAME_IS_CLASS = "isClass";
  @SerializedName(SERIALIZED_NAME_IS_CLASS)
  private Boolean isClass;

  public static final String SERIALIZED_NAME_IS_NESTED_ASSEMBLY = "isNestedAssembly";
  @SerializedName(SERIALIZED_NAME_IS_NESTED_ASSEMBLY)
  private Boolean isNestedAssembly;

  public static final String SERIALIZED_NAME_IS_NESTED_FAM_A_N_D_ASSEM = "isNestedFamANDAssem";
  @SerializedName(SERIALIZED_NAME_IS_NESTED_FAM_A_N_D_ASSEM)
  private Boolean isNestedFamANDAssem;

  public static final String SERIALIZED_NAME_IS_NESTED_FAMILY = "isNestedFamily";
  @SerializedName(SERIALIZED_NAME_IS_NESTED_FAMILY)
  private Boolean isNestedFamily;

  public static final String SERIALIZED_NAME_IS_NESTED_FAM_O_R_ASSEM = "isNestedFamORAssem";
  @SerializedName(SERIALIZED_NAME_IS_NESTED_FAM_O_R_ASSEM)
  private Boolean isNestedFamORAssem;

  public static final String SERIALIZED_NAME_IS_NESTED_PRIVATE = "isNestedPrivate";
  @SerializedName(SERIALIZED_NAME_IS_NESTED_PRIVATE)
  private Boolean isNestedPrivate;

  public static final String SERIALIZED_NAME_IS_NESTED_PUBLIC = "isNestedPublic";
  @SerializedName(SERIALIZED_NAME_IS_NESTED_PUBLIC)
  private Boolean isNestedPublic;

  public static final String SERIALIZED_NAME_IS_NOT_PUBLIC = "isNotPublic";
  @SerializedName(SERIALIZED_NAME_IS_NOT_PUBLIC)
  private Boolean isNotPublic;

  public static final String SERIALIZED_NAME_IS_PUBLIC = "isPublic";
  @SerializedName(SERIALIZED_NAME_IS_PUBLIC)
  private Boolean isPublic;

  public static final String SERIALIZED_NAME_IS_AUTO_LAYOUT = "isAutoLayout";
  @SerializedName(SERIALIZED_NAME_IS_AUTO_LAYOUT)
  private Boolean isAutoLayout;

  public static final String SERIALIZED_NAME_IS_EXPLICIT_LAYOUT = "isExplicitLayout";
  @SerializedName(SERIALIZED_NAME_IS_EXPLICIT_LAYOUT)
  private Boolean isExplicitLayout;

  public static final String SERIALIZED_NAME_IS_LAYOUT_SEQUENTIAL = "isLayoutSequential";
  @SerializedName(SERIALIZED_NAME_IS_LAYOUT_SEQUENTIAL)
  private Boolean isLayoutSequential;

  public static final String SERIALIZED_NAME_IS_ANSI_CLASS = "isAnsiClass";
  @SerializedName(SERIALIZED_NAME_IS_ANSI_CLASS)
  private Boolean isAnsiClass;

  public static final String SERIALIZED_NAME_IS_AUTO_CLASS = "isAutoClass";
  @SerializedName(SERIALIZED_NAME_IS_AUTO_CLASS)
  private Boolean isAutoClass;

  public static final String SERIALIZED_NAME_IS_UNICODE_CLASS = "isUnicodeClass";
  @SerializedName(SERIALIZED_NAME_IS_UNICODE_CLASS)
  private Boolean isUnicodeClass;

  public static final String SERIALIZED_NAME_IS_C_O_M_OBJECT = "isCOMObject";
  @SerializedName(SERIALIZED_NAME_IS_C_O_M_OBJECT)
  private Boolean isCOMObject;

  public static final String SERIALIZED_NAME_IS_CONTEXTFUL = "isContextful";
  @SerializedName(SERIALIZED_NAME_IS_CONTEXTFUL)
  private Boolean isContextful;

  public static final String SERIALIZED_NAME_IS_ENUM = "isEnum";
  @SerializedName(SERIALIZED_NAME_IS_ENUM)
  private Boolean isEnum;

  public static final String SERIALIZED_NAME_IS_MARSHAL_BY_REF = "isMarshalByRef";
  @SerializedName(SERIALIZED_NAME_IS_MARSHAL_BY_REF)
  private Boolean isMarshalByRef;

  public static final String SERIALIZED_NAME_IS_PRIMITIVE = "isPrimitive";
  @SerializedName(SERIALIZED_NAME_IS_PRIMITIVE)
  private Boolean isPrimitive;

  public static final String SERIALIZED_NAME_IS_VALUE_TYPE = "isValueType";
  @SerializedName(SERIALIZED_NAME_IS_VALUE_TYPE)
  private Boolean isValueType;

  public static final String SERIALIZED_NAME_IS_SIGNATURE_TYPE = "isSignatureType";
  @SerializedName(SERIALIZED_NAME_IS_SIGNATURE_TYPE)
  private Boolean isSignatureType;

  public static final String SERIALIZED_NAME_IS_SECURITY_CRITICAL = "isSecurityCritical";
  @SerializedName(SERIALIZED_NAME_IS_SECURITY_CRITICAL)
  private Boolean isSecurityCritical;

  public static final String SERIALIZED_NAME_IS_SECURITY_SAFE_CRITICAL = "isSecuritySafeCritical";
  @SerializedName(SERIALIZED_NAME_IS_SECURITY_SAFE_CRITICAL)
  private Boolean isSecuritySafeCritical;

  public static final String SERIALIZED_NAME_IS_SECURITY_TRANSPARENT = "isSecurityTransparent";
  @SerializedName(SERIALIZED_NAME_IS_SECURITY_TRANSPARENT)
  private Boolean isSecurityTransparent;

  public static final String SERIALIZED_NAME_STRUCT_LAYOUT_ATTRIBUTE = "structLayoutAttribute";
  @SerializedName(SERIALIZED_NAME_STRUCT_LAYOUT_ATTRIBUTE)
  private StructLayoutAttribute structLayoutAttribute;

  public static final String SERIALIZED_NAME_TYPE_INITIALIZER = "typeInitializer";
  @SerializedName(SERIALIZED_NAME_TYPE_INITIALIZER)
  private ConstructorInfo typeInitializer;

  public static final String SERIALIZED_NAME_TYPE_HANDLE = "typeHandle";
  @SerializedName(SERIALIZED_NAME_TYPE_HANDLE)
  private RuntimeTypeHandle typeHandle;

  public static final String SERIALIZED_NAME_GUID = "guid";
  @SerializedName(SERIALIZED_NAME_GUID)
  private UUID guid;

  public static final String SERIALIZED_NAME_BASE_TYPE = "baseType";
  @SerializedName(SERIALIZED_NAME_BASE_TYPE)
  private Type baseType;

  public static final String SERIALIZED_NAME_IS_SERIALIZABLE = "isSerializable";
  @SerializedName(SERIALIZED_NAME_IS_SERIALIZABLE)
  private Boolean isSerializable;

  public static final String SERIALIZED_NAME_CONTAINS_GENERIC_PARAMETERS = "containsGenericParameters";
  @SerializedName(SERIALIZED_NAME_CONTAINS_GENERIC_PARAMETERS)
  private Boolean containsGenericParameters;

  public static final String SERIALIZED_NAME_IS_VISIBLE = "isVisible";
  @SerializedName(SERIALIZED_NAME_IS_VISIBLE)
  private Boolean isVisible;

  public static final String SERIALIZED_NAME_GENERIC_TYPE_PARAMETERS = "genericTypeParameters";
  @SerializedName(SERIALIZED_NAME_GENERIC_TYPE_PARAMETERS)
  private List<Type> genericTypeParameters = null;

  public static final String SERIALIZED_NAME_DECLARED_CONSTRUCTORS = "declaredConstructors";
  @SerializedName(SERIALIZED_NAME_DECLARED_CONSTRUCTORS)
  private List<ConstructorInfo> declaredConstructors = null;

  public static final String SERIALIZED_NAME_DECLARED_EVENTS = "declaredEvents";
  @SerializedName(SERIALIZED_NAME_DECLARED_EVENTS)
  private List<EventInfo> declaredEvents = null;

  public static final String SERIALIZED_NAME_DECLARED_FIELDS = "declaredFields";
  @SerializedName(SERIALIZED_NAME_DECLARED_FIELDS)
  private List<FieldInfo> declaredFields = null;

  public static final String SERIALIZED_NAME_DECLARED_MEMBERS = "declaredMembers";
  @SerializedName(SERIALIZED_NAME_DECLARED_MEMBERS)
  private List<MemberInfo> declaredMembers = null;

  public static final String SERIALIZED_NAME_DECLARED_METHODS = "declaredMethods";
  @SerializedName(SERIALIZED_NAME_DECLARED_METHODS)
  private List<MethodInfo> declaredMethods = null;

  public static final String SERIALIZED_NAME_DECLARED_NESTED_TYPES = "declaredNestedTypes";
  @SerializedName(SERIALIZED_NAME_DECLARED_NESTED_TYPES)
  private List<TypeInfo> declaredNestedTypes = null;

  public static final String SERIALIZED_NAME_DECLARED_PROPERTIES = "declaredProperties";
  @SerializedName(SERIALIZED_NAME_DECLARED_PROPERTIES)
  private List<PropertyInfo> declaredProperties = null;

  public static final String SERIALIZED_NAME_IMPLEMENTED_INTERFACES = "implementedInterfaces";
  @SerializedName(SERIALIZED_NAME_IMPLEMENTED_INTERFACES)
  private List<Type> implementedInterfaces = null;


   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getName() {
    return name;
  }




   /**
   * Get customAttributes
   * @return customAttributes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<CustomAttributeData> getCustomAttributes() {
    return customAttributes;
  }




   /**
   * Get isCollectible
   * @return isCollectible
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsCollectible() {
    return isCollectible;
  }




   /**
   * Get metadataToken
   * @return metadataToken
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getMetadataToken() {
    return metadataToken;
  }




   /**
   * Get isInterface
   * @return isInterface
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsInterface() {
    return isInterface;
  }




  public TypeInfo memberType(MemberTypes memberType) {
    
    this.memberType = memberType;
    return this;
  }

   /**
   * Get memberType
   * @return memberType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public MemberTypes getMemberType() {
    return memberType;
  }


  public void setMemberType(MemberTypes memberType) {
    this.memberType = memberType;
  }


   /**
   * Get namespace
   * @return namespace
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getNamespace() {
    return namespace;
  }




   /**
   * Get assemblyQualifiedName
   * @return assemblyQualifiedName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAssemblyQualifiedName() {
    return assemblyQualifiedName;
  }




   /**
   * Get fullName
   * @return fullName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getFullName() {
    return fullName;
  }




  public TypeInfo assembly(Assembly assembly) {
    
    this.assembly = assembly;
    return this;
  }

   /**
   * Get assembly
   * @return assembly
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Assembly getAssembly() {
    return assembly;
  }


  public void setAssembly(Assembly assembly) {
    this.assembly = assembly;
  }


  public TypeInfo module(Module module) {
    
    this.module = module;
    return this;
  }

   /**
   * Get module
   * @return module
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Module getModule() {
    return module;
  }


  public void setModule(Module module) {
    this.module = module;
  }


   /**
   * Get isNested
   * @return isNested
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsNested() {
    return isNested;
  }




  public TypeInfo declaringType(Type declaringType) {
    
    this.declaringType = declaringType;
    return this;
  }

   /**
   * Get declaringType
   * @return declaringType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Type getDeclaringType() {
    return declaringType;
  }


  public void setDeclaringType(Type declaringType) {
    this.declaringType = declaringType;
  }


  public TypeInfo declaringMethod(MethodBase declaringMethod) {
    
    this.declaringMethod = declaringMethod;
    return this;
  }

   /**
   * Get declaringMethod
   * @return declaringMethod
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public MethodBase getDeclaringMethod() {
    return declaringMethod;
  }


  public void setDeclaringMethod(MethodBase declaringMethod) {
    this.declaringMethod = declaringMethod;
  }


  public TypeInfo reflectedType(Type reflectedType) {
    
    this.reflectedType = reflectedType;
    return this;
  }

   /**
   * Get reflectedType
   * @return reflectedType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Type getReflectedType() {
    return reflectedType;
  }


  public void setReflectedType(Type reflectedType) {
    this.reflectedType = reflectedType;
  }


  public TypeInfo underlyingSystemType(Type underlyingSystemType) {
    
    this.underlyingSystemType = underlyingSystemType;
    return this;
  }

   /**
   * Get underlyingSystemType
   * @return underlyingSystemType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Type getUnderlyingSystemType() {
    return underlyingSystemType;
  }


  public void setUnderlyingSystemType(Type underlyingSystemType) {
    this.underlyingSystemType = underlyingSystemType;
  }


   /**
   * Get isTypeDefinition
   * @return isTypeDefinition
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsTypeDefinition() {
    return isTypeDefinition;
  }




   /**
   * Get isArray
   * @return isArray
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsArray() {
    return isArray;
  }




   /**
   * Get isByRef
   * @return isByRef
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsByRef() {
    return isByRef;
  }




   /**
   * Get isPointer
   * @return isPointer
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsPointer() {
    return isPointer;
  }




   /**
   * Get isConstructedGenericType
   * @return isConstructedGenericType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsConstructedGenericType() {
    return isConstructedGenericType;
  }




   /**
   * Get isGenericParameter
   * @return isGenericParameter
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsGenericParameter() {
    return isGenericParameter;
  }




   /**
   * Get isGenericTypeParameter
   * @return isGenericTypeParameter
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsGenericTypeParameter() {
    return isGenericTypeParameter;
  }




   /**
   * Get isGenericMethodParameter
   * @return isGenericMethodParameter
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsGenericMethodParameter() {
    return isGenericMethodParameter;
  }




   /**
   * Get isGenericType
   * @return isGenericType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsGenericType() {
    return isGenericType;
  }




   /**
   * Get isGenericTypeDefinition
   * @return isGenericTypeDefinition
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsGenericTypeDefinition() {
    return isGenericTypeDefinition;
  }




   /**
   * Get isSZArray
   * @return isSZArray
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsSZArray() {
    return isSZArray;
  }




   /**
   * Get isVariableBoundArray
   * @return isVariableBoundArray
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsVariableBoundArray() {
    return isVariableBoundArray;
  }




   /**
   * Get isByRefLike
   * @return isByRefLike
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsByRefLike() {
    return isByRefLike;
  }




   /**
   * Get hasElementType
   * @return hasElementType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getHasElementType() {
    return hasElementType;
  }




   /**
   * Get genericTypeArguments
   * @return genericTypeArguments
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Type> getGenericTypeArguments() {
    return genericTypeArguments;
  }




   /**
   * Get genericParameterPosition
   * @return genericParameterPosition
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getGenericParameterPosition() {
    return genericParameterPosition;
  }




  public TypeInfo genericParameterAttributes(GenericParameterAttributes genericParameterAttributes) {
    
    this.genericParameterAttributes = genericParameterAttributes;
    return this;
  }

   /**
   * Get genericParameterAttributes
   * @return genericParameterAttributes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public GenericParameterAttributes getGenericParameterAttributes() {
    return genericParameterAttributes;
  }


  public void setGenericParameterAttributes(GenericParameterAttributes genericParameterAttributes) {
    this.genericParameterAttributes = genericParameterAttributes;
  }


  public TypeInfo attributes(TypeAttributes attributes) {
    
    this.attributes = attributes;
    return this;
  }

   /**
   * Get attributes
   * @return attributes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public TypeAttributes getAttributes() {
    return attributes;
  }


  public void setAttributes(TypeAttributes attributes) {
    this.attributes = attributes;
  }


   /**
   * Get isAbstract
   * @return isAbstract
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsAbstract() {
    return isAbstract;
  }




   /**
   * Get isImport
   * @return isImport
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsImport() {
    return isImport;
  }




   /**
   * Get isSealed
   * @return isSealed
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsSealed() {
    return isSealed;
  }




   /**
   * Get isSpecialName
   * @return isSpecialName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsSpecialName() {
    return isSpecialName;
  }




   /**
   * Get isClass
   * @return isClass
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsClass() {
    return isClass;
  }




   /**
   * Get isNestedAssembly
   * @return isNestedAssembly
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsNestedAssembly() {
    return isNestedAssembly;
  }




   /**
   * Get isNestedFamANDAssem
   * @return isNestedFamANDAssem
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsNestedFamANDAssem() {
    return isNestedFamANDAssem;
  }




   /**
   * Get isNestedFamily
   * @return isNestedFamily
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsNestedFamily() {
    return isNestedFamily;
  }




   /**
   * Get isNestedFamORAssem
   * @return isNestedFamORAssem
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsNestedFamORAssem() {
    return isNestedFamORAssem;
  }




   /**
   * Get isNestedPrivate
   * @return isNestedPrivate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsNestedPrivate() {
    return isNestedPrivate;
  }




   /**
   * Get isNestedPublic
   * @return isNestedPublic
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsNestedPublic() {
    return isNestedPublic;
  }




   /**
   * Get isNotPublic
   * @return isNotPublic
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsNotPublic() {
    return isNotPublic;
  }




   /**
   * Get isPublic
   * @return isPublic
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsPublic() {
    return isPublic;
  }




   /**
   * Get isAutoLayout
   * @return isAutoLayout
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsAutoLayout() {
    return isAutoLayout;
  }




   /**
   * Get isExplicitLayout
   * @return isExplicitLayout
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsExplicitLayout() {
    return isExplicitLayout;
  }




   /**
   * Get isLayoutSequential
   * @return isLayoutSequential
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsLayoutSequential() {
    return isLayoutSequential;
  }




   /**
   * Get isAnsiClass
   * @return isAnsiClass
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsAnsiClass() {
    return isAnsiClass;
  }




   /**
   * Get isAutoClass
   * @return isAutoClass
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsAutoClass() {
    return isAutoClass;
  }




   /**
   * Get isUnicodeClass
   * @return isUnicodeClass
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsUnicodeClass() {
    return isUnicodeClass;
  }




   /**
   * Get isCOMObject
   * @return isCOMObject
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsCOMObject() {
    return isCOMObject;
  }




   /**
   * Get isContextful
   * @return isContextful
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsContextful() {
    return isContextful;
  }




   /**
   * Get isEnum
   * @return isEnum
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsEnum() {
    return isEnum;
  }




   /**
   * Get isMarshalByRef
   * @return isMarshalByRef
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsMarshalByRef() {
    return isMarshalByRef;
  }




   /**
   * Get isPrimitive
   * @return isPrimitive
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsPrimitive() {
    return isPrimitive;
  }




   /**
   * Get isValueType
   * @return isValueType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsValueType() {
    return isValueType;
  }




   /**
   * Get isSignatureType
   * @return isSignatureType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsSignatureType() {
    return isSignatureType;
  }




   /**
   * Get isSecurityCritical
   * @return isSecurityCritical
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsSecurityCritical() {
    return isSecurityCritical;
  }




   /**
   * Get isSecuritySafeCritical
   * @return isSecuritySafeCritical
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsSecuritySafeCritical() {
    return isSecuritySafeCritical;
  }




   /**
   * Get isSecurityTransparent
   * @return isSecurityTransparent
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsSecurityTransparent() {
    return isSecurityTransparent;
  }




  public TypeInfo structLayoutAttribute(StructLayoutAttribute structLayoutAttribute) {
    
    this.structLayoutAttribute = structLayoutAttribute;
    return this;
  }

   /**
   * Get structLayoutAttribute
   * @return structLayoutAttribute
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public StructLayoutAttribute getStructLayoutAttribute() {
    return structLayoutAttribute;
  }


  public void setStructLayoutAttribute(StructLayoutAttribute structLayoutAttribute) {
    this.structLayoutAttribute = structLayoutAttribute;
  }


  public TypeInfo typeInitializer(ConstructorInfo typeInitializer) {
    
    this.typeInitializer = typeInitializer;
    return this;
  }

   /**
   * Get typeInitializer
   * @return typeInitializer
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ConstructorInfo getTypeInitializer() {
    return typeInitializer;
  }


  public void setTypeInitializer(ConstructorInfo typeInitializer) {
    this.typeInitializer = typeInitializer;
  }


  public TypeInfo typeHandle(RuntimeTypeHandle typeHandle) {
    
    this.typeHandle = typeHandle;
    return this;
  }

   /**
   * Get typeHandle
   * @return typeHandle
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public RuntimeTypeHandle getTypeHandle() {
    return typeHandle;
  }


  public void setTypeHandle(RuntimeTypeHandle typeHandle) {
    this.typeHandle = typeHandle;
  }


   /**
   * Get guid
   * @return guid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UUID getGuid() {
    return guid;
  }




  public TypeInfo baseType(Type baseType) {
    
    this.baseType = baseType;
    return this;
  }

   /**
   * Get baseType
   * @return baseType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Type getBaseType() {
    return baseType;
  }


  public void setBaseType(Type baseType) {
    this.baseType = baseType;
  }


   /**
   * Get isSerializable
   * @return isSerializable
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsSerializable() {
    return isSerializable;
  }




   /**
   * Get containsGenericParameters
   * @return containsGenericParameters
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getContainsGenericParameters() {
    return containsGenericParameters;
  }




   /**
   * Get isVisible
   * @return isVisible
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsVisible() {
    return isVisible;
  }




   /**
   * Get genericTypeParameters
   * @return genericTypeParameters
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Type> getGenericTypeParameters() {
    return genericTypeParameters;
  }




   /**
   * Get declaredConstructors
   * @return declaredConstructors
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<ConstructorInfo> getDeclaredConstructors() {
    return declaredConstructors;
  }




   /**
   * Get declaredEvents
   * @return declaredEvents
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<EventInfo> getDeclaredEvents() {
    return declaredEvents;
  }




   /**
   * Get declaredFields
   * @return declaredFields
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<FieldInfo> getDeclaredFields() {
    return declaredFields;
  }




   /**
   * Get declaredMembers
   * @return declaredMembers
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<MemberInfo> getDeclaredMembers() {
    return declaredMembers;
  }




   /**
   * Get declaredMethods
   * @return declaredMethods
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<MethodInfo> getDeclaredMethods() {
    return declaredMethods;
  }




   /**
   * Get declaredNestedTypes
   * @return declaredNestedTypes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<TypeInfo> getDeclaredNestedTypes() {
    return declaredNestedTypes;
  }




   /**
   * Get declaredProperties
   * @return declaredProperties
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<PropertyInfo> getDeclaredProperties() {
    return declaredProperties;
  }




   /**
   * Get implementedInterfaces
   * @return implementedInterfaces
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Type> getImplementedInterfaces() {
    return implementedInterfaces;
  }




  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TypeInfo typeInfo = (TypeInfo) o;
    return Objects.equals(this.name, typeInfo.name) &&
        Objects.equals(this.customAttributes, typeInfo.customAttributes) &&
        Objects.equals(this.isCollectible, typeInfo.isCollectible) &&
        Objects.equals(this.metadataToken, typeInfo.metadataToken) &&
        Objects.equals(this.isInterface, typeInfo.isInterface) &&
        Objects.equals(this.memberType, typeInfo.memberType) &&
        Objects.equals(this.namespace, typeInfo.namespace) &&
        Objects.equals(this.assemblyQualifiedName, typeInfo.assemblyQualifiedName) &&
        Objects.equals(this.fullName, typeInfo.fullName) &&
        Objects.equals(this.assembly, typeInfo.assembly) &&
        Objects.equals(this.module, typeInfo.module) &&
        Objects.equals(this.isNested, typeInfo.isNested) &&
        Objects.equals(this.declaringType, typeInfo.declaringType) &&
        Objects.equals(this.declaringMethod, typeInfo.declaringMethod) &&
        Objects.equals(this.reflectedType, typeInfo.reflectedType) &&
        Objects.equals(this.underlyingSystemType, typeInfo.underlyingSystemType) &&
        Objects.equals(this.isTypeDefinition, typeInfo.isTypeDefinition) &&
        Objects.equals(this.isArray, typeInfo.isArray) &&
        Objects.equals(this.isByRef, typeInfo.isByRef) &&
        Objects.equals(this.isPointer, typeInfo.isPointer) &&
        Objects.equals(this.isConstructedGenericType, typeInfo.isConstructedGenericType) &&
        Objects.equals(this.isGenericParameter, typeInfo.isGenericParameter) &&
        Objects.equals(this.isGenericTypeParameter, typeInfo.isGenericTypeParameter) &&
        Objects.equals(this.isGenericMethodParameter, typeInfo.isGenericMethodParameter) &&
        Objects.equals(this.isGenericType, typeInfo.isGenericType) &&
        Objects.equals(this.isGenericTypeDefinition, typeInfo.isGenericTypeDefinition) &&
        Objects.equals(this.isSZArray, typeInfo.isSZArray) &&
        Objects.equals(this.isVariableBoundArray, typeInfo.isVariableBoundArray) &&
        Objects.equals(this.isByRefLike, typeInfo.isByRefLike) &&
        Objects.equals(this.hasElementType, typeInfo.hasElementType) &&
        Objects.equals(this.genericTypeArguments, typeInfo.genericTypeArguments) &&
        Objects.equals(this.genericParameterPosition, typeInfo.genericParameterPosition) &&
        Objects.equals(this.genericParameterAttributes, typeInfo.genericParameterAttributes) &&
        Objects.equals(this.attributes, typeInfo.attributes) &&
        Objects.equals(this.isAbstract, typeInfo.isAbstract) &&
        Objects.equals(this.isImport, typeInfo.isImport) &&
        Objects.equals(this.isSealed, typeInfo.isSealed) &&
        Objects.equals(this.isSpecialName, typeInfo.isSpecialName) &&
        Objects.equals(this.isClass, typeInfo.isClass) &&
        Objects.equals(this.isNestedAssembly, typeInfo.isNestedAssembly) &&
        Objects.equals(this.isNestedFamANDAssem, typeInfo.isNestedFamANDAssem) &&
        Objects.equals(this.isNestedFamily, typeInfo.isNestedFamily) &&
        Objects.equals(this.isNestedFamORAssem, typeInfo.isNestedFamORAssem) &&
        Objects.equals(this.isNestedPrivate, typeInfo.isNestedPrivate) &&
        Objects.equals(this.isNestedPublic, typeInfo.isNestedPublic) &&
        Objects.equals(this.isNotPublic, typeInfo.isNotPublic) &&
        Objects.equals(this.isPublic, typeInfo.isPublic) &&
        Objects.equals(this.isAutoLayout, typeInfo.isAutoLayout) &&
        Objects.equals(this.isExplicitLayout, typeInfo.isExplicitLayout) &&
        Objects.equals(this.isLayoutSequential, typeInfo.isLayoutSequential) &&
        Objects.equals(this.isAnsiClass, typeInfo.isAnsiClass) &&
        Objects.equals(this.isAutoClass, typeInfo.isAutoClass) &&
        Objects.equals(this.isUnicodeClass, typeInfo.isUnicodeClass) &&
        Objects.equals(this.isCOMObject, typeInfo.isCOMObject) &&
        Objects.equals(this.isContextful, typeInfo.isContextful) &&
        Objects.equals(this.isEnum, typeInfo.isEnum) &&
        Objects.equals(this.isMarshalByRef, typeInfo.isMarshalByRef) &&
        Objects.equals(this.isPrimitive, typeInfo.isPrimitive) &&
        Objects.equals(this.isValueType, typeInfo.isValueType) &&
        Objects.equals(this.isSignatureType, typeInfo.isSignatureType) &&
        Objects.equals(this.isSecurityCritical, typeInfo.isSecurityCritical) &&
        Objects.equals(this.isSecuritySafeCritical, typeInfo.isSecuritySafeCritical) &&
        Objects.equals(this.isSecurityTransparent, typeInfo.isSecurityTransparent) &&
        Objects.equals(this.structLayoutAttribute, typeInfo.structLayoutAttribute) &&
        Objects.equals(this.typeInitializer, typeInfo.typeInitializer) &&
        Objects.equals(this.typeHandle, typeInfo.typeHandle) &&
        Objects.equals(this.guid, typeInfo.guid) &&
        Objects.equals(this.baseType, typeInfo.baseType) &&
        Objects.equals(this.isSerializable, typeInfo.isSerializable) &&
        Objects.equals(this.containsGenericParameters, typeInfo.containsGenericParameters) &&
        Objects.equals(this.isVisible, typeInfo.isVisible) &&
        Objects.equals(this.genericTypeParameters, typeInfo.genericTypeParameters) &&
        Objects.equals(this.declaredConstructors, typeInfo.declaredConstructors) &&
        Objects.equals(this.declaredEvents, typeInfo.declaredEvents) &&
        Objects.equals(this.declaredFields, typeInfo.declaredFields) &&
        Objects.equals(this.declaredMembers, typeInfo.declaredMembers) &&
        Objects.equals(this.declaredMethods, typeInfo.declaredMethods) &&
        Objects.equals(this.declaredNestedTypes, typeInfo.declaredNestedTypes) &&
        Objects.equals(this.declaredProperties, typeInfo.declaredProperties) &&
        Objects.equals(this.implementedInterfaces, typeInfo.implementedInterfaces);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, customAttributes, isCollectible, metadataToken, isInterface, memberType, namespace, assemblyQualifiedName, fullName, assembly, module, isNested, declaringType, declaringMethod, reflectedType, underlyingSystemType, isTypeDefinition, isArray, isByRef, isPointer, isConstructedGenericType, isGenericParameter, isGenericTypeParameter, isGenericMethodParameter, isGenericType, isGenericTypeDefinition, isSZArray, isVariableBoundArray, isByRefLike, hasElementType, genericTypeArguments, genericParameterPosition, genericParameterAttributes, attributes, isAbstract, isImport, isSealed, isSpecialName, isClass, isNestedAssembly, isNestedFamANDAssem, isNestedFamily, isNestedFamORAssem, isNestedPrivate, isNestedPublic, isNotPublic, isPublic, isAutoLayout, isExplicitLayout, isLayoutSequential, isAnsiClass, isAutoClass, isUnicodeClass, isCOMObject, isContextful, isEnum, isMarshalByRef, isPrimitive, isValueType, isSignatureType, isSecurityCritical, isSecuritySafeCritical, isSecurityTransparent, structLayoutAttribute, typeInitializer, typeHandle, guid, baseType, isSerializable, containsGenericParameters, isVisible, genericTypeParameters, declaredConstructors, declaredEvents, declaredFields, declaredMembers, declaredMethods, declaredNestedTypes, declaredProperties, implementedInterfaces);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TypeInfo {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    customAttributes: ").append(toIndentedString(customAttributes)).append("\n");
    sb.append("    isCollectible: ").append(toIndentedString(isCollectible)).append("\n");
    sb.append("    metadataToken: ").append(toIndentedString(metadataToken)).append("\n");
    sb.append("    isInterface: ").append(toIndentedString(isInterface)).append("\n");
    sb.append("    memberType: ").append(toIndentedString(memberType)).append("\n");
    sb.append("    namespace: ").append(toIndentedString(namespace)).append("\n");
    sb.append("    assemblyQualifiedName: ").append(toIndentedString(assemblyQualifiedName)).append("\n");
    sb.append("    fullName: ").append(toIndentedString(fullName)).append("\n");
    sb.append("    assembly: ").append(toIndentedString(assembly)).append("\n");
    sb.append("    module: ").append(toIndentedString(module)).append("\n");
    sb.append("    isNested: ").append(toIndentedString(isNested)).append("\n");
    sb.append("    declaringType: ").append(toIndentedString(declaringType)).append("\n");
    sb.append("    declaringMethod: ").append(toIndentedString(declaringMethod)).append("\n");
    sb.append("    reflectedType: ").append(toIndentedString(reflectedType)).append("\n");
    sb.append("    underlyingSystemType: ").append(toIndentedString(underlyingSystemType)).append("\n");
    sb.append("    isTypeDefinition: ").append(toIndentedString(isTypeDefinition)).append("\n");
    sb.append("    isArray: ").append(toIndentedString(isArray)).append("\n");
    sb.append("    isByRef: ").append(toIndentedString(isByRef)).append("\n");
    sb.append("    isPointer: ").append(toIndentedString(isPointer)).append("\n");
    sb.append("    isConstructedGenericType: ").append(toIndentedString(isConstructedGenericType)).append("\n");
    sb.append("    isGenericParameter: ").append(toIndentedString(isGenericParameter)).append("\n");
    sb.append("    isGenericTypeParameter: ").append(toIndentedString(isGenericTypeParameter)).append("\n");
    sb.append("    isGenericMethodParameter: ").append(toIndentedString(isGenericMethodParameter)).append("\n");
    sb.append("    isGenericType: ").append(toIndentedString(isGenericType)).append("\n");
    sb.append("    isGenericTypeDefinition: ").append(toIndentedString(isGenericTypeDefinition)).append("\n");
    sb.append("    isSZArray: ").append(toIndentedString(isSZArray)).append("\n");
    sb.append("    isVariableBoundArray: ").append(toIndentedString(isVariableBoundArray)).append("\n");
    sb.append("    isByRefLike: ").append(toIndentedString(isByRefLike)).append("\n");
    sb.append("    hasElementType: ").append(toIndentedString(hasElementType)).append("\n");
    sb.append("    genericTypeArguments: ").append(toIndentedString(genericTypeArguments)).append("\n");
    sb.append("    genericParameterPosition: ").append(toIndentedString(genericParameterPosition)).append("\n");
    sb.append("    genericParameterAttributes: ").append(toIndentedString(genericParameterAttributes)).append("\n");
    sb.append("    attributes: ").append(toIndentedString(attributes)).append("\n");
    sb.append("    isAbstract: ").append(toIndentedString(isAbstract)).append("\n");
    sb.append("    isImport: ").append(toIndentedString(isImport)).append("\n");
    sb.append("    isSealed: ").append(toIndentedString(isSealed)).append("\n");
    sb.append("    isSpecialName: ").append(toIndentedString(isSpecialName)).append("\n");
    sb.append("    isClass: ").append(toIndentedString(isClass)).append("\n");
    sb.append("    isNestedAssembly: ").append(toIndentedString(isNestedAssembly)).append("\n");
    sb.append("    isNestedFamANDAssem: ").append(toIndentedString(isNestedFamANDAssem)).append("\n");
    sb.append("    isNestedFamily: ").append(toIndentedString(isNestedFamily)).append("\n");
    sb.append("    isNestedFamORAssem: ").append(toIndentedString(isNestedFamORAssem)).append("\n");
    sb.append("    isNestedPrivate: ").append(toIndentedString(isNestedPrivate)).append("\n");
    sb.append("    isNestedPublic: ").append(toIndentedString(isNestedPublic)).append("\n");
    sb.append("    isNotPublic: ").append(toIndentedString(isNotPublic)).append("\n");
    sb.append("    isPublic: ").append(toIndentedString(isPublic)).append("\n");
    sb.append("    isAutoLayout: ").append(toIndentedString(isAutoLayout)).append("\n");
    sb.append("    isExplicitLayout: ").append(toIndentedString(isExplicitLayout)).append("\n");
    sb.append("    isLayoutSequential: ").append(toIndentedString(isLayoutSequential)).append("\n");
    sb.append("    isAnsiClass: ").append(toIndentedString(isAnsiClass)).append("\n");
    sb.append("    isAutoClass: ").append(toIndentedString(isAutoClass)).append("\n");
    sb.append("    isUnicodeClass: ").append(toIndentedString(isUnicodeClass)).append("\n");
    sb.append("    isCOMObject: ").append(toIndentedString(isCOMObject)).append("\n");
    sb.append("    isContextful: ").append(toIndentedString(isContextful)).append("\n");
    sb.append("    isEnum: ").append(toIndentedString(isEnum)).append("\n");
    sb.append("    isMarshalByRef: ").append(toIndentedString(isMarshalByRef)).append("\n");
    sb.append("    isPrimitive: ").append(toIndentedString(isPrimitive)).append("\n");
    sb.append("    isValueType: ").append(toIndentedString(isValueType)).append("\n");
    sb.append("    isSignatureType: ").append(toIndentedString(isSignatureType)).append("\n");
    sb.append("    isSecurityCritical: ").append(toIndentedString(isSecurityCritical)).append("\n");
    sb.append("    isSecuritySafeCritical: ").append(toIndentedString(isSecuritySafeCritical)).append("\n");
    sb.append("    isSecurityTransparent: ").append(toIndentedString(isSecurityTransparent)).append("\n");
    sb.append("    structLayoutAttribute: ").append(toIndentedString(structLayoutAttribute)).append("\n");
    sb.append("    typeInitializer: ").append(toIndentedString(typeInitializer)).append("\n");
    sb.append("    typeHandle: ").append(toIndentedString(typeHandle)).append("\n");
    sb.append("    guid: ").append(toIndentedString(guid)).append("\n");
    sb.append("    baseType: ").append(toIndentedString(baseType)).append("\n");
    sb.append("    isSerializable: ").append(toIndentedString(isSerializable)).append("\n");
    sb.append("    containsGenericParameters: ").append(toIndentedString(containsGenericParameters)).append("\n");
    sb.append("    isVisible: ").append(toIndentedString(isVisible)).append("\n");
    sb.append("    genericTypeParameters: ").append(toIndentedString(genericTypeParameters)).append("\n");
    sb.append("    declaredConstructors: ").append(toIndentedString(declaredConstructors)).append("\n");
    sb.append("    declaredEvents: ").append(toIndentedString(declaredEvents)).append("\n");
    sb.append("    declaredFields: ").append(toIndentedString(declaredFields)).append("\n");
    sb.append("    declaredMembers: ").append(toIndentedString(declaredMembers)).append("\n");
    sb.append("    declaredMethods: ").append(toIndentedString(declaredMethods)).append("\n");
    sb.append("    declaredNestedTypes: ").append(toIndentedString(declaredNestedTypes)).append("\n");
    sb.append("    declaredProperties: ").append(toIndentedString(declaredProperties)).append("\n");
    sb.append("    implementedInterfaces: ").append(toIndentedString(implementedInterfaces)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

